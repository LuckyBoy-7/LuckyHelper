entities.LuckyHelper/PixelDebugHelper.placements.name.normal=PixelDebugHelper

# PassByRefill
entities.LuckyHelper/PassByRefill.placements.name.normal=PassByRefill

# Timer Text
entities.LuckyHelper/TimerText.placements.name.normal=Timer Text
entities.LuckyHelper/TimerText.attributes.description.showType=Every text shares the same data, so if you want to reset, use "clearDataOnTextLoaded" option 

# Death Count Text
entities.LuckyHelper/DeathCountText.placements.name.normal=Death Count Text
entities.LuckyHelper/DeathCountText.attributes.description.showType=Every text shares the same data, so if you want to reset, use "clearDataOnTextLoaded" option 

# Custom Water
entities.LuckyHelper/CustomWater.placements.name.normal=Custom Water
entities.LuckyHelper/CustomWater.attributes.description.color=Change the color of the water
entities.LuckyHelper/CustomWater.attributes.description.hasBottom=Whether the water has a bottom surface
entities.LuckyHelper/CustomWater.attributes.description.disableSurfaceJump=Disable player's jump at the top of the water
entities.LuckyHelper/CustomWater.attributes.description.disableSwimRise=Player won't be pushed up when near the top of the water
entities.LuckyHelper/CustomWater.attributes.description.maxSpeedMultiplierX=Factor of controlling max x speed
entities.LuckyHelper/CustomWater.attributes.description.maxSpeedMultiplierY=Factor of controlling max y speed
entities.LuckyHelper/CustomWater.attributes.description.accelerationMultiplierX=Factor of controlling max x acceleration
entities.LuckyHelper/CustomWater.attributes.description.accelerationMultiplierY=Factor of controlling max y acceleration
entities.LuckyHelper/CustomWater.attributes.description.killPlayer=The water can kill player
entities.LuckyHelper/CustomWater.attributes.description.killPlayerDelay=Kill player after defined seconds, if player gets out of water, the timer will reset(only work when 'killPlayer' is enabled)
entities.LuckyHelper/CustomWater.attributes.description.playerLoseControl=You can't control movement but can still dash or do something else
entities.LuckyHelper/CustomWater.attributes.description.playerGravity=You will be pushed down in the water, just like having gravity in the air
entities.LuckyHelper/CustomWater.attributes.description.playerCanJump=You can jump in the water.
entities.LuckyHelper/CustomWater.attributes.description.refillExtraJump=You can refill extra jump in the water(only work with 'ExtendedVariantMod')

# GhostTransposeBarrier
entities.LuckyHelper/GhostTransposeBarrier.placements.name.normal=Ghost Transpose Barrier

# CustomGondola
entities.LuckyHelper/CustomGondola.placements.name.normal=Custom Gondola
entities.LuckyHelper/CustomGondola.attributes.description.canInteractOnMove=You can still interact to stop and turn back when gondola's speed reaches it's maximum
entities.LuckyHelper/CustomGondola.attributes.description.addCeiling=Shush...don't ask why it hasn't have one in original celeste
entities.LuckyHelper/CustomGondola.attributes.description.minPositionPercent=Start percent of left point within the wire
entities.LuckyHelper/CustomGondola.attributes.description.maxPositionPercent=End percent of right point within the wire
entities.LuckyHelper/CustomGondola.attributes.description.rotationSpeed=Rotation speed when the gondola starts off
entities.LuckyHelper/CustomGondola.attributes.description.accelerationDuration=how much time gondola takes to start off or slow down
entities.LuckyHelper/CustomGondola.attributes.description.moveDuration=how much time gondola takes to move within the center segment
entities.LuckyHelper/CustomGondola.attributes.description.positionFlag=If have this flag and 'startPositionType' is 'ByFlag', gondola will be placed at start, otherwise the end
entities.LuckyHelper/CustomGondola.attributes.description.moveToStartFlag=If detect this flag(oneshot), gondola will be placed or moved to start
entities.LuckyHelper/CustomGondola.attributes.description.moveToEndFlag=If detect this flag(oneshot), gondola will be placed or moved to end
entities.LuckyHelper/CustomGondola.attributes.description.smoothFlagMove=Whether the gondola will teleport or move to the target pos when flag is triggered

# ArbitraryShapeConquestArea
entities.LuckyHelper/ArbitraryShapeConquestArea.placements.name.normal=Arbitrary Shape Conquest Area
entities.LuckyHelper/ArbitraryShapeConquestArea.attributes.description.totalAmount=The total amount of progress 
entities.LuckyHelper/ArbitraryShapeConquestArea.attributes.description.conquestSpeed=The speed of conquest one unit can offer 
entities.LuckyHelper/ArbitraryShapeConquestArea.attributes.description.blueCamp=All names of blue camp entities seperated by comma
entities.LuckyHelper/ArbitraryShapeConquestArea.attributes.description.redCamp=All names of red camp entities seperated by comma
entities.LuckyHelper/ArbitraryShapeConquestArea.attributes.description.flagOnCompleted=The flag will be set when conquest is completed
entities.LuckyHelper/ArbitraryShapeConquestArea.attributes.description.ignoreCollidable=Some entities will disable collision sometimes, so this option will help
entities.LuckyHelper/ArbitraryShapeConquestArea.attributes.description.ignoreCollidableWhiteList=This option determines which entity 'ignoreCollidable' can apply to
entities.LuckyHelper/ArbitraryShapeConquestArea.attributes.description.useSpriteShapeAsFallback=Some entities don't have collider, so this option will help

# LootSpeedrunController
entities.LuckyHelper/LootSpeedrunController.placements.name.normal=LootSpeedrunController

# Loot
entities.LuckyHelper/Loot.placements.name.normal=Loot

# LootMaxValueText
entities.LuckyHelper/LootMaxValueText.placements.name.normal=Loot Max Value Text

# DeathCountText
entities.LuckyHelper/DeathCountText.placements.name.normal=Death Count Text
entities.LuckyHelper/DeathCountText.attributes.description.savedPath=The path where the 'DeathCountSavedIn Trigger' sets.

# DreamZone
entities.LuckyHelper/DreamZone.placements.name.normal=Dream Zone
entities.LuckyHelper/DreamZone.attributes.description.stopPlayerOnCollide=When player's dream dashing and collides with the solid block, will it be stopped?
entities.LuckyHelper/DreamZone.attributes.description.killPlayerOnCollide=When player's dream dashing and collides with the solid block, will player be killed?
entities.LuckyHelper/DreamZone.attributes.description.starColors1=Big particle's color
entities.LuckyHelper/DreamZone.attributes.description.starColors2=Medium particle's color
entities.LuckyHelper/DreamZone.attributes.description.starColors3=Small particle's color
entities.LuckyHelper/DreamZone.attributes.description.disableInteraction=Whether the dream zone be a decal or gp usage
entities.LuckyHelper/DreamZone.attributes.description.disableCollisionOnNotDreaming=Due to my stupid code, you can have collision with dream zone on not dreaming with dash state, this is to fix this, \nor you can use the feature to do funny gp 
entities.LuckyHelper/DreamZone.attributes.description.cancelDreamDashOnNotDreaming=If you dash into an active dream zone then disable it, will player's dream dash be canceled or not 
entities.LuckyHelper/DreamZone.attributes.description.useOldFeatureOnNotDreaming=When dashing in inactive dream zone, can you have an immediate collision with dream zone?

# DreamZone_V2
entities.LuckyHelper/DreamZone_V2.placements.name.normal=Dream Zone V2
entities.LuckyHelper/DreamZone_V2.attributes.description.stopPlayerOnCollide=When player's dream dashing and collides with the solid block, will it be stopped?
entities.LuckyHelper/DreamZone_V2.attributes.description.killPlayerOnCollide=When player's dream dashing and collides with the solid block, will player be killed?
entities.LuckyHelper/DreamZone_V2.attributes.description.bigStarColors=Big particle's color
entities.LuckyHelper/DreamZone_V2.attributes.description.mediumStarColors2=Medium particle's color
entities.LuckyHelper/DreamZone_V2.attributes.description.smallStarColors3=Small particle's color
entities.LuckyHelper/DreamZone_V2.attributes.description.disableInteraction=Whether the dream zone be a decal or gp usage
entities.LuckyHelper/DreamZone_V2.attributes.description.disableCollisionOnNotDreaming=Due to my stupid code, you can have collision with dream zone on not dreaming with dash state, this is to fix this, \nor you can use the feature to do funny gp 
entities.LuckyHelper/DreamZone_V2.attributes.description.cancelDreamDashOnNotDreaming=If you dash into an active dream zone then disable it, will player's dream dash be canceled or not 
entities.LuckyHelper/DreamZone_V2.attributes.description.useOldFeatureOnNotDreaming=When dashing in inactive dream zone, can you have an immediate collision with dream zone?
entities.LuckyHelper/DreamZone_V2.attributes.description.refillDashMode=Determines how you set player's dash after exit dream zone\nForceSet: Set player's dash to 'DashesToRefill'\nTrySet: Refill player's dash first like normal dream block, then try to set 'DashesToRefill' dashes if it's higher\nAdd: Add 'DashesToRefill' dashes to Player

# DecalWithCombinedRegistry
entities.LuckyHelper/DecalWithCombinedRegistry.placements.name.normal=Decal With Combined Registry
entities.LuckyHelper/DecalWithCombinedRegistry.attributes.description.decalRegistryPaths=Create a '{YourModName(in everest.yaml)}_CombinedDecalRegistry.xml' file in root path of your Mod(In LuckyHelper, it's named "LuckyHelper_CombinedDecalRegistry.xml") and do what 'DecalRegistry.xml' do, \nbut...the path works like an id which you can casually combine to this entity, and it's seperated by comma like 'path1, path2, ..., path_n', you can check this xml in LuckyHelper.zip for more detailed information!

# ReskinnableBadelineBoost
entities.LuckyHelper/ReskinnableBadelineBoost.placements.name.normal=Reskinnable Badeline Boost

# EntityPinner
entities.LuckyHelper/EntityPinner.placements.name.normal=Entity Pinner
entities.LuckyHelper/EntityPinner.attributes.description.naiveMove=Whether the entity will be attracted with collision(if it can collide with others), and if you are using Eevee Helper's `Holdable Container`, please disable this option 
entities.LuckyHelper/EntityPinner.attributes.description.adjustX=Adjust the final x position due to some corner cases 
entities.LuckyHelper/EntityPinner.attributes.description.adjustY=Adjust the final y position due to some corner cases  
entities.LuckyHelper/EntityPinner.attributes.description.spriteXMLID=ID of the sprite config in Sprites.xml
entities.LuckyHelper/EntityPinner.attributes.description.boxHeight=Height of your Hitbox if your Collider Type is Rectangle
entities.LuckyHelper/EntityPinner.attributes.description.boxWidth=Width of your Hitbox if your Collider Type is Rectangle
entities.LuckyHelper/EntityPinner.attributes.description.radius=Radius of your Hitbox if your Collider Type is Circle
entities.LuckyHelper/EntityPinner.attributes.description.types=comma-seperated sequence of the types you want to attract

# SpeedRedirect
entities.LuckyHelper/SpeedRedirect.placements.name.normal=Speed Redirect
entities.LuckyHelper/SpeedRedirect.attributes.description.triggerRedirectTiming=OnEnter: You'll be shot when you enter this area\nOnAttractedToCenter: You'll be shot when you're attracted this area's center
entities.LuckyHelper/SpeedRedirect.attributes.description.speedRedirectStrengthType=PlayerEnterSpeed: Shoot spped depends on your enter speed\nFixed: any shoot speed will be set to fixedShootSpeed\nCorrection: any shoot speed between minCorrectionSpeed and maxCorrectionSpeed will be set to fixedShootSpeed
entities.LuckyHelper/SpeedRedirect.attributes.description.speedRedirectDirType=You can define which dir to shoot by following options: \nCustom: by configuring 'redirectDirX' and 'redirectDirY'\nRebound: Inverse player's speed on enter\nflipX: Inverse player's X speed on enter\nflipY: Inverse player's Y speed on enter
entities.LuckyHelper/SpeedRedirect.attributes.description.shootSpeedMultiplier=Ultra! Ultra! Ultra! Ultra! Ultra!
entities.LuckyHelper/SpeedRedirect.attributes.description.minShootSpeed=A limitation to the entity, forcing the final output speed being no lesser than this value
entities.LuckyHelper/SpeedRedirect.attributes.description.maxShootSpeed=A limitation to the entity, forcing the final output speed being no greater than this value
entities.LuckyHelper/SpeedRedirect.attributes.description.redirectDirX=The redirect direction vector, where (1, 0) is right and (0, 1) is down
entities.LuckyHelper/SpeedRedirect.attributes.description.redirectDirY=The redirect direction vector, where (1, 0) is right and (0, 1) is down
entities.LuckyHelper/SpeedRedirect.attributes.description.radius=The radius of the hitbox under "Circle" collider type
entities.LuckyHelper/SpeedRedirect.attributes.description.fixedShootSpeed=If the speed redirect strength type is "Fixed", this would be the setup speed \nIf the strength type is "Correction", this would be the speed that the player would be corrected to \nwhen player speed is between the minimum and maximum correction speed
entities.LuckyHelper/SpeedRedirect.attributes.description.attractSpeed=How fast would the player be pulled towards the center
entities.LuckyHelper/SpeedRedirect.attributes.description.adjustX=The offset from the center where player is being pulled into
entities.LuckyHelper/SpeedRedirect.attributes.description.adjustY=The offset from the center where player is being pulled into
entities.LuckyHelper/SpeedRedirect.attributes.description.boxHeight=The height of the hitbox under "Rectangle" collider type
entities.LuckyHelper/SpeedRedirect.attributes.description.boxWidth=The width of the hitbox under "Rectangle" collider type

# CrystalHeartDialogController
entities.LuckyHelper/CrystalHeartDialogController.placements.name.normal=Crystal Heart Dialog Controller
entities.LuckyHelper/CrystalHeartDialogController.attributes.description.dialogs=comma-seperated dialog_keys to set different crystal heart gem texts in one room(be placed with heart gem) 

# Follower Container
entities.LuckyHelper/FollowerContainer.placements.name.normal=Follower Container
entities.LuckyHelper/FollowerContainer.attributes.description.containMode=Determines how the container contains entities.\n - RoomStart: Whitelisted entities inside the container at the start of the room are the only entities that will be contained.\n - FlagChanged: Entities are re-contained whenever the flag is enabled. This means you can delay containment with a flag to contain something like the Player.\n - Always: Whitelisted entities inside the container are always affected, and entities outside the container are no longer affected.\n - DelayedRoomStart: Same as RoomStart, but will occur on the first update tick (e.g. after screen transition).
entities.LuckyHelper/FollowerContainer.attributes.description.containFlag=The container will only be enabled when the flag is active. Empty for always enabled. (Prefix flag name with "!" to invert, e.g. !myFlag)
entities.LuckyHelper/FollowerContainer.attributes.description.whitelist=Comma-separated list of entity class names to contain (e.g. Booster,CrystalStaticSpinner,etc). Contains most entities if empty.
entities.LuckyHelper/FollowerContainer.attributes.description.blacklist=Comma-separated list of entity class names to ignore (e.g. Booster,CrystalStaticSpinner,etc). Includes Players, SolidTiles, BackgroundTiles, Decals and Triggers unless specifically whitelisted.
entities.LuckyHelper/FollowerContainer.attributes.description.ignoreAnchors=Disables the movement of internal "anchor positions", which usually store the start position of the entity.
entities.LuckyHelper/FollowerContainer.attributes.description.forceStandardBehavior=Disables new special-cased behaviour for entities. New special behaviour may be added at any time, so enable this option if you're taking advantage of any buggy/jank behaviour.
entities.LuckyHelper/FollowerContainer.attributes.description.ignoreContainerBounds=Attempts to contain all valid entities in the room, regardless of the boundaries of the container itself.
entities.LuckyHelper/FollowerContainer.attributes.description.canFollowFlag=Whether the container can follow player on touch when the flag is active. Empty for always followable.
entities.LuckyHelper/FollowerContainer.attributes.description.collectFlag=Whether the container will be collected like strawberry when the flag is active.
entities.LuckyHelper/FollowerContainer.attributes.description.loseFlag=Whether the container will stop following player when the flag is active.
entities.LuckyHelper/FollowerContainer.attributes.description.followerSpeed=Container move speed, from 0 to 1.
entities.LuckyHelper/FollowerContainer.attributes.description.interval=Container's distance to the front follower object like strawberry or key.
entities.LuckyHelper/FollowerContainer.attributes.description.dontDestroyAfterDetached=Container can be detached by DetachFollowerContainerTrigger, should it keep alive after player's death?


# Color Modifier
entities.LuckyHelper/ColorModifier.placements.name.normal=Color Modifier
entities.LuckyHelper/ColorModifier.attributes.description.containMode=Determines how the container contains entities.\n - RoomStart: Whitelisted entities inside the container at the start of the room are the only entities that will be contained.\n - FlagChanged: Entities are re-contained whenever the flag is enabled. This means you can delay containment with a flag to contain something like the Player.\n - Always: Whitelisted entities inside the container are always affected, and entities outside the container are no longer affected.\n - DelayedRoomStart: Same as RoomStart, but will occur on the first update tick (e.g. after screen transition).
entities.LuckyHelper/ColorModifier.attributes.description.containFlag=The container will only be enabled when the flag is active. Empty for always enabled. (Prefix flag name with "!" to invert, e.g. !myFlag)
entities.LuckyHelper/ColorModifier.attributes.description.whitelist=Comma-separated list of entity class names to contain (e.g. Booster,CrystalStaticSpinner,etc). Contains most entities if empty.
entities.LuckyHelper/ColorModifier.attributes.description.blacklist=Comma-separated list of entity class names to ignore (e.g. Booster,CrystalStaticSpinner,etc). Includes Players, SolidTiles, BackgroundTiles, Decals and Triggers unless specifically whitelisted.
entities.LuckyHelper/ColorModifier.attributes.description.forceStandardBehavior=Disables new special-cased behaviour for entities. New special behaviour may be added at any time, so enable this option if you're taking advantage of any buggy/jank behaviour.
entities.LuckyHelper/ColorModifier.attributes.description.ignoreContainerBounds=Attempts to contain all valid entities in the room, regardless of the boundaries of the container itself.
entities.LuckyHelper/ColorModifier.attributes.description.colorBlendMode=Determines how the 'Colors' affects entity color \nMultiply: blend entity color with entity color * custom color \nReplace: replace entity color with custom color(only affect particle and geometry) 
entities.LuckyHelper/ColorModifier.attributes.description.affectParticle=Will the modifier affect entity's particle color?
entities.LuckyHelper/ColorModifier.attributes.description.affectTexture=Will the modifier affect entity's texture color?
entities.LuckyHelper/ColorModifier.attributes.description.affectLight=Will the modifier affect entity's light and bloom color?
entities.LuckyHelper/ColorModifier.attributes.description.affectGeometry=Will the modifier affect entity's geometry color like dotted line around puffer?
entities.LuckyHelper/ColorModifier.attributes.description.colorSourceMode=Determines how we choose color from 'Colors' \nFirstColor: get the first color of 'Colors' \nCycleColor: get the first, second, ..., nth color of 'Colors' in order, then repeat \nRandomColor: like CycleColor Mode but choose randomly \nRainbow: like Spinner's rainbow option 
entities.LuckyHelper/ColorModifier.attributes.description.colorTransitionMode=Determines how the color changes \nLerp: color will lerp from current color to the next with 'ColorChangeSpeed' \nBlink: color will change to the next color after a duration(something like 1 / 'ColorChangeSpeed')
entities.LuckyHelper/ColorModifier.attributes.description.colors=A sequence of colors seperated by comma, determines the color pool, which will be chosen with different 'ColorSourceMode'
entities.LuckyHelper/ColorModifier.attributes.description.colorChangeSpeed=Determines how fast the color changes


# Toggle Orbit Container
entities.LuckyHelper/ToggleOrbitContainer.placements.name.normal=Toggle Orbit Container
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.containMode=Determines how the container contains entities.\n - RoomStart: Whitelisted entities inside the container at the start of the room are the only entities that will be contained.\n - FlagChanged: Entities are re-contained whenever the flag is enabled. This means you can delay containment with a flag to contain something like the Player.\n - Always: Whitelisted entities inside the container are always affected, and entities outside the container are no longer affected.\n - DelayedRoomStart: Same as RoomStart, but will occur on the first update tick (e.g. after screen transition).
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.containFlag=The container will only be enabled when the flag is active. Empty for always enabled. (Prefix flag name with "!" to invert, e.g. !myFlag)
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.whitelist=Comma-separated list of entity class names to contain (e.g. Booster,CrystalStaticSpinner,etc). Contains most entities if empty.
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.blacklist=Comma-separated list of entity class names to ignore (e.g. Booster,CrystalStaticSpinner,etc). Includes Players, SolidTiles, BackgroundTiles, Decals and Triggers unless specifically whitelisted.
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.ignoreAnchors=Disables the movement of internal "anchor positions", which usually store the start position of the entity.
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.forceStandardBehavior=Disables new special-cased behaviour for entities. New special behaviour may be added at any time, so enable this option if you're taking advantage of any buggy/jank behaviour.
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.ignoreContainerBounds=Attempts to contain all valid entities in the room, regardless of the boundaries of the container itself.

entities.LuckyHelper/ToggleOrbitContainer.attributes.description.startAngle=We define right refers to 0 degrees, up refers to 90 degrees, so startAngle determines where's the start of the track by the degree, and the circle center has been defined by the node, and the distance to circle center is calculated automatically(startAngle and endAngle will be clamped to [0, 360])
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.endAngle=We define right refers to 0 degrees, up refers to 90 degrees, so endAngle determines where's the end of the track by the degree, and the circle center has been defined by the node, and the distance to circle center is calculated automatically(startAngle and endAngle will be clamped to [0, 360])
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.moveToEndFlag=If game has this flag, the container will move to the end, otherwise the start
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.connectionType=Determines the track's direction is clockwise or anti-clockwise
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.angleExpressionType=Determines the start/end angle will start at vector.right or container's start angle
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.lineNodeSpritePath=Line node sprites, start at 'gameplay' folder, with images like 'awa00.png', 'awa01.png', 'awa02.png'
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.lineNodeNumber=How many node we dot on the track, at least 2
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.speed=How fast the container will move(and the speed is always along the circum), which will be affected by wind
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.windForceXMultiplier=How much the wind's x force will affect the container's move speed
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.windForceYMultiplier=How much the wind's y force will affect the container's move speed
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.additionalForceX=Add additional force x to container's movement, which may give some effects like gravity or something else
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.additionalForceY=Add additional force y to container's movement, which may give some effects like gravity or something else
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.depth=Determines nodes depth
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.drawNodes=Do you want to draw nodes or not
entities.LuckyHelper/ToggleOrbitContainer.attributes.description.debug=Show circle center and circum for debug

#todo Triggers =======================================================================================================================================
# SetPassByRefillDashesTrigger
triggers.LuckyHelper/SetPassByRefillDashesTrigger.placements.name.normal=SetPassByRefillDashesTrigger

# SetFallingBlockBlockFloatySpaceBlockTrigger
triggers.LuckyHelper/SetFallingBlockBlockFloatySpaceBlockTrigger.placements.name.normal=SetFallingBlockBlockFloatySpaceBlockTrigger

# GhostTransposeTrigger
triggers.LuckyHelper/GhostTransposeTrigger.placements.name.normal=Ghost Transpose Trigger
triggers.LuckyHelper/GhostTransposeTrigger.attributes.description.ghostOutOfBoundsAction=Defines what happends when the ghost touches the room bounds\nNone: Do nothing\nTreatAsSolid: Regard the bounds as a wall\nKillPlayer: Kill player
triggers.LuckyHelper/GhostTransposeTrigger.attributes.description.transposeDirType=Defines what dirs player can transpose
triggers.LuckyHelper/GhostTransposeTrigger.attributes.description.useDashKey=Whether use 'dash key' to trigger ghost, if disabled, you can use default 'Space key' to trigger ghost, which can be customized in settings
triggers.LuckyHelper/GhostTransposeTrigger.attributes.description.maxGhostNumber=The max number of ghosts that can exist in the room
triggers.LuckyHelper/GhostTransposeTrigger.attributes.description.killPlayerOnTeleportToSpike=Sometimes having speed along the spike dir will prevent death, that's what this option does

# KillGhostTrigger
triggers.LuckyHelper/KillGhostTrigger.placements.name.normal=Kill Ghost Trigger

# LootCollectArea
triggers.LuckyHelper/LootCollectArea.placements.name.normal=Loot Collect Area

# LootSpeedrunStartup
triggers.LuckyHelper/LootSpeedrunStartup.placements.name.normal=Loot Speedrun Startup

# LootInfoVisibleSet
triggers.LuckyHelper/LootInfoVisibleSet.placements.name.normal=Loot Info Visible Set
triggers.LuckyHelper/LootInfoVisibleSet.attributes.description.visible=Whether to show 'Loot Speedrun Info Display'(Timer and value text)

# LootThresholdFlagSet
triggers.LuckyHelper/LootThresholdFlagSet.placements.name.normal=Loot Threshold Flag Set
triggers.LuckyHelper/LootThresholdFlagSet.attributes.description.threshold=If your looted value is equal or greater than the threshold, the flag will be set

# DeathCountSavedIn
triggers.LuckyHelper/DeathCountSavedIn.placements.name.normal=Death Count Saved In
triggers.LuckyHelper/DeathCountSavedIn.attributes.description.savedIn=Each death in this room will be counted to the path, then you can read it by DeathCountText later

# TimeSavedIn
triggers.LuckyHelper/TimeSavedIn.placements.name.normal=Time Saved In
triggers.LuckyHelper/TimeSavedIn.attributes.description.savedIn=Time in this room will be counted to the path, then you can read it by TimerText later

# FreezeTrigger
triggers.LuckyHelper/FreezeTrigger.placements.name.normal=Freeze Trigger

# LightSourceAdjustTrigger
triggers.LuckyHelper/LightSourceAdjustTrigger.placements.name.normal=Light Source Adjust Trigger

# TalkComponentController
triggers.LuckyHelper/TalkComponentController.placements.name.normal=TalkComponent Controller
triggers.LuckyHelper/TalkComponentController.attributes.description.blackList=Fill the Type of the talkComponent's entity, which will be ignored by the controller
triggers.LuckyHelper/TalkComponentController.attributes.description.dynamic=Whether the controller will dynamically search for talkComponent's entity, if disabled, it will only remember the collided entity at start

# OverlapPairSetFlagTrigger
triggers.LuckyHelper/OverlapPairSetFlagTrigger.placements.name.normal=Overlap Pair Set Flag Trigger
triggers.LuckyHelper/OverlapPairSetFlagTrigger.attributes.description.main=I assume there are at least two OverlapPairSetFlagTrigger with the same id, only one can be main, which do collide check and set flag, while the others are just dummy triggers that do nothing.
triggers.LuckyHelper/OverlapPairSetFlagTrigger.attributes.description.flag=While two OverlapPairSetFlagTrigger with same id has collision, the flag will be set, otherwise removed(one of the two triggers should be 'main' trigger)

# FastBubbleController 
triggers.LuckyHelper/FastBubbleController.placements.name.normal=Fast Bubble Controller

# PlayerMovementController
triggers.LuckyHelper/PlayerMovementController.placements.name.normal=Player Movement Controller
triggers.LuckyHelper/PlayerMovementController.attributes.description.activationType=None: Means we will do nothing to player's movements, also used to clear set movement data\nSet: player's movement will keep being controlled\nStay: player's movement will only be controlled when he's in the area
triggers.LuckyHelper/PlayerMovementController.attributes.description.highSpeedAccelerationX=Also controls the acceleration when player's walking to the max speed

# SetConditionFlagTrigger
triggers.LuckyHelper/SetConditionFlagTrigger.placements.name.normal=Set Condition Flag Trigger

# InvertFlagTrigger
triggers.LuckyHelper/InvertFlagTrigger.placements.name.normal=Invert Flag Trigger
triggers.LuckyHelper/InvertFlagTrigger.attributes.description.types=Comma-separated list of entity class names to interact (e.g. Player, Strawberry, Booster, etc)
triggers.LuckyHelper/InvertFlagTrigger.attributes.description.entityTriggerMode=Determines when the trigger will do a triggered action\nOnEntityEnter: On entities in the types list enter the trigger\nOnEntityStay: On entities in the types list stay in the trigger\nOnEntityLeave: On entities in the types list leave the trigger\nAlways: Do it in every frame. Works like a controller
triggers.LuckyHelper/InvertFlagTrigger.attributes.description.flag=Flag you want to invert

# LogicFlagTrigger
triggers.LuckyHelper/LogicFlagTrigger.placements.name.normal=Logic Flag Trigger
triggers.LuckyHelper/LogicFlagTrigger.attributes.description.types=Comma-separated list of entity class names to interact (e.g. Player, Strawberry, Booster, etc)
triggers.LuckyHelper/LogicFlagTrigger.attributes.description.entityTriggerMode=Determines when the trigger will do a triggered action\nOnEntityEnter: On entities in the types list enter the trigger\nOnEntityStay: On entities in the types list stay in the trigger\nOnEntityLeave: On entities in the types list leave the trigger\nAlways: Do it in every frame. Works like a controller
triggers.LuckyHelper/LogicFlagTrigger.attributes.description.flag=Flag you want to set if conditionFlagExpression fits the condition
triggers.LuckyHelper/LogicFlagTrigger.attributes.description.debug=You can see debug info with flag format, check it with mapping utils!(You can see how the expression is parsed if your Condition Flag Expression not works as you like)
triggers.LuckyHelper/LogicFlagTrigger.attributes.description.conditionFlagExpression=Logic expression with flag format like (!flag1 && (flag2 || flag3)) means when flag1 doesn't exist and there's flag2 or flag3, it can output the flag you want.\n&& for both flags exist\n|| for either of flags exist\n! for invert flag or invert expression like !(flag1 && flag2)

# DetachFollowerContainerTrigger
triggers.LuckyHelper/DetachFollowerContainerTrigger.placements.name.normal=Detach Follower Container Trigger

# ExCameraUseUnsafeZoom
triggers.LuckyHelper/ExCameraUseUnsafeZoom.placements.name.normal=ExCamera Use Unsafe Zoom

# AudioAdjustTrigger
triggers.LuckyHelper/AudioAdjustTrigger.placements.name.normal=Audio Adjust Trigger
triggers.LuckyHelper/AudioAdjustTrigger.attributes.description.targets=comma-seperated sequence of the event names you want to affect like `event:/char/madeline/idle_crackknuckles, event:/char/madeline/idle_sneeze, event:/char/madeline/idle_scratch`\nif you fill 'all' in it, it will try to affect all the audio
triggers.LuckyHelper/AudioAdjustTrigger.attributes.description.replacedTargets=comma-seperated sequence of the event names you want to replace, which needs to correspond one-by-one to the targets 

# TriggerTrigger
triggers.LuckyHelper/TriggerTrigger.placements.name.onjump= Trigger Trigger (On Jump)

triggers.LuckyHelper/TriggerTrigger.attributes.description.activationType=The condition the trigger checks. If you want to change this, you must update this option, then close and reopen this window, so that the correct options appear.\nFlag: When the flag is true. If the flag is left blank, it will always activate when entered.\nDashing: When the player inside is dashing.\nDash Count: If the player's dash count meets the condition specified.\nDeaths In Room: If the player has died the specified amount of times in the room.\nDeaths In Level: If the player has died the specified amount of times in the entire session.\nHoldable Grabbed: When the player grabs a holdable.\nHorizontal / Vertical Speed: If the player's speed meets the condition specified.\nJumping: When the player jumps.\nCrouching: When the player crouches.\nTime Since Player Moved: If the amount of time the player has stayed perfectly still meets the condition specified.\nHoldable Entered: When a holdable object enters the trigger.\nOn Entity Touch: When the amount of times the player touches the specified type of entity meets the condition specified.\nCore Mode: If the core mode of the level matches the specified mode.\nOn Interaction: When the player interacts (via talk button) with the trigger.\nTouched Solid: If the player is either standing on or grabbing the specified solid, or any solid or platform if none is specified.\nEntity Entered: When the specified type of entity enters the trigger.\nOn Input: When the specified input is pressed within the trigger.\nGrounded: Whether the player is standing on the ground.
triggers.LuckyHelper/TriggerTrigger.attributes.description.oneUse=Whether the trigger disappears after being used.
triggers.LuckyHelper/TriggerTrigger.attributes.description.delay=How long to wait after activating the trigger for it to activate the chosen triggers.
triggers.LuckyHelper/TriggerTrigger.attributes.description.tryTriggerEveryFrame=Whether the trigger should only check the condition every frame, instead of the first time you enter it.
triggers.LuckyHelper/TriggerTrigger.attributes.description.coverRoom=If true, then the trigger will activate upon entering the room, just like it covers the whole room.
triggers.LuckyHelper/TriggerTrigger.attributes.description.randomize=If true, the trigger will randomly activate only one of the chosen triggers instead of all of them.
triggers.LuckyHelper/TriggerTrigger.attributes.description.matchPosition=If enabled, the selected triggers will be moved and resized to match this trigger. Allows triggers that change based on position, such as Light Fade, to work.
triggers.LuckyHelper/TriggerTrigger.attributes.description.invertCondition=Whether the condition should not be met in order to activate.

# OrderedFlagTrigger
triggers.LuckyHelper/OrderedFlagTrigger.placements.name.normal=Ordered Flag Trigger
triggers.LuckyHelper/OrderedFlagTrigger.placements.description.normal=Set flags with order
triggers.LuckyHelper/OrderedFlagTrigger.attributes.description.types=Comma-separated list of entity class names to interact (e.g. Player, Strawberry, Booster, etc)
triggers.LuckyHelper/OrderedFlagTrigger.attributes.description.entityTriggerMode=Determines when the trigger will do a triggered action\nOnEntityEnter: On entities in the types list enter the trigger\nOnEntityStay: On entities in the types list stay in the trigger\nOnEntityLeave: On entities in the types list leave the trigger\nAlways: Do it in every frame. Works like a controller
triggers.LuckyHelper/OrderedFlagTrigger.attributes.description.flags=Flags you want to set orderly
triggers.LuckyHelper/OrderedFlagTrigger.attributes.description.beforeSetFlagAction=Determines how you threat previous flags before set a new flag\nNone: do nothing\nClearOtherFlags: clear other flags\nClearPreviousFlag: clear the last flag you set
triggers.LuckyHelper/OrderedFlagTrigger.attributes.description.onFlagReachEndAction=Determines how flag cursor go after it reaches the end\nOver: trigger will be removed, works like onlyOnce\nCycle: flag cursor will start at the first flag then move ahead again\nPingPong: flag cursor will move to the end, move to the start, move to the end ...\nRandom: flag cursor will randomly choose a position then move ahead
triggers.LuckyHelper/OrderedFlagTrigger.attributes.description.startAtExistingFlag=Flag cursor will find the first existing flag to start, instead of starting at first  
triggers.LuckyHelper/OrderedFlagTrigger.attributes.description.updateCursorByCurrentFlags=Flag cursor will update by current flag that set by other triggers\ntake default situation for example\nyou trigger flag1, then flag2, but you use mapping utils or some flag triggers to turn flag2 off, flag1 on\nnow if you enter this trigger, you will get flag3 instead of flag2 because the 'flag cursor' didn't update\nso if you want cursor update by the current flag states, check this option

# Camera Update Helper
triggers.LuckyHelper/CameraUpdateHelper.placements.name.normal=Camera Update Helper
triggers.LuckyHelper/CameraUpdateHelper.attributes.description.disableCameraUpdateOnTeleportFlag=Camera's position will be set after teleport, this option is set to disable it when you want to set your own camera position after teleport. 
triggers.LuckyHelper/CameraUpdateHelper.attributes.description.disablePlayerCameraUpdateFlag=Camera's position will update when player's in control or player.ForceCameraUpdate is true, this option is set to disable this normal update, but you can still use some function to update camera directly.

# Player Invincible Controller
triggers.LuckyHelper/PlayerInvincibleController.placements.name.normal=Player Invincible Controller
